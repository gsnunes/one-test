version: '2.4'
services:
  # client-main:
  #   build:
  #     context: ./client/main
  #   container_name: one-client-main
  #   ports:
  #     - 3000:3000
  #   stdin_open: true
  #   volumes:
  #     - ./client/main:/usr/src/app
  #     - /usr/src/app/node_modules/
  db-mysql-initiative:
    command: --default-authentication-plugin=mysql_native_password
    container_name: one-db-mysql-initiative
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    image: mysql
  db-mysql-user:
    command: --default-authentication-plugin=mysql_native_password
    container_name: one-db-mysql-user
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    image: mysql
  # ds-main:
  #   build:
  #     context: ./ds/main
  #   container_name: one-ds-main
  #   ports:
  #     - 6006:6006
  #   volumes:
  #     - ./ds/main:/usr/src/app
  #     - /usr/src/app/node_modules/
  server-initiative:
    build:
      context: ./server/initiative
    container_name: one-server-initiative
    depends_on:
      db-mysql-initiative:
        condition: service_healthy
    environment:
      DB_HOST: db-mysql-initiative
      BROKER_HOST: broker
    ports:
      - 9001:3000
    volumes:
      - ./server/initiative:/usr/src/app
      - /usr/src/app/node_modules/
  server-user:
    build:
      context: ./server/user
    container_name: one-server-user
    depends_on:
      db-mysql-user:
        condition: service_healthy
    environment:
      DB_HOST: db-mysql-user
      BROKER_HOST: broker
    ports:
      - 9002:3000
    volumes:
      - ./server/user:/usr/src/app
      - /usr/src/app/node_modules/
  server-gateway:
    build:
      context: ./server/gateway
    container_name: one-server-gateway
    depends_on:
      - server-user
    environment:
      SERVER_USER_HOST: server-user
      SERVER_INITIATIVE_HOST: server-initiative
    ports:
      - 9000:3000
    volumes:
      - ./server/gateway:/usr/src/app
      - /usr/src/app/node_modules/
  zookeeper:
    container_name: one-zookeeper
    image: confluentinc/cp-zookeeper:5.3.1
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    container_name: one-broker
    depends_on:
      - zookeeper
    image: confluentinc/cp-kafka:5.3.1
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
